#!/bin/sh

. /etc/autodl/autodl.conf
PACKAGE="add-amule-downloads"


DATE=$(date +"%y%m%d%H%M%S")
WATCH_FILE=$WATCH_PATH/$PACKAGE.$DATE.ed2k
TMP_ED2KCACHE=/tmp/$PACKAGE.cache.$DATE
TMP_AMULESCRIPT=/tmp/$PACKAGE.amulescript.$DATE
TMP_AMULEOUTPUT=/tmp/$PACKAGE.amuleoutput.$DATE
TMP_CRONTAB=/tmp/$PACKAGE.crontab.$DATE
TMP_LOGFILE=/tmp/$PACKAGE.logfile.$DATE

LOGFILE=$AUTODOWNLOAD_LOG_PATH/$PACKAGE.log

amuled_was_running=0
links_added=0

cleanup() {

	echo -n "----------------- " >> "$LOGFILE"
	date >> "$LOGFILE"
	cat $TMP_LOGFILE >> "$LOGFILE"

	rm -f $TMP_ED2KACHE
	rm -f $TMP_AMULESCRIPT
	rm -f $TMP_AMULEOUTPUT
	rm -f $TMP_CRONTAB
	rm -f $TMP_LOGFILE
	
	$AUTODOWNLOAD_LOCK_CMD -u $AUTODOWNLOAD_LOCKFILE
	if [ $amuled_was_running -eq 0 ] && [ $links_added -eq 0 ]; then
		$AUTODOWNLOAD_PATH/$AUTODOWNLOAD_DLMONITOR_CMD
	fi
}

log() {
	echo $@
	echo $@ >> $TMP_LOGFILE
}

error() {
	log "$PACKAGE Error: $1"
	echo "
	
	$PACKAGE Error: $1
	
	$(cat $TMP_LOGFILE)
	
	"| $MAIL_CMD -s "$PACKAGE ERROR"

	cleanup
	exit 1
}


if ! $AUTODOWNLOAD_LOCK_CMD -w -l $$ $AUTODOWNLOAD_LOCKFILE; then
	error "Error. Cannot acquire lock."
fi


# - Fetch link ed2k

[ -d "$WATCH_PATH" ] || mkdir "$WATCH_PATH" 2>&1 > /dev/null || error "Cannot create directory $WATCH_PATH"

log -n "Running command $AMULE_GET_ED2K_CMD ... "
if ! $AMULE_GET_ED2K_CMD 1> $WATCH_FILE 2>> "$TMP_LOGFILE"; then
	log "Failed!";
	error "Cannot get new links"
fi
log " Done."

# - Add link ed2k (con invio mail)

touch $AUTODOWNLOAD_ED2K_CACHE_FILE
touch $TMP_AMULESCRIPT

log -n "Creating backup copy of cache file... "
cp "$AUTODOWNLOAD_ED2K_CACHE_FILE" "$AUTODOWNLOAD_ED2K_CACHE_FILE.old" 2>&1 > /dev/null || ( log "Failed!" ; error "Cannot backup cache file")
log "Done"


for linkfile in $(ls $WATCH_PATH/*.ed2k); do
	log "Found file $linkfile"
	fromdos "$linkfile"
	#oldIFS=$IFS
	#IFS=$'\n'
	for link in $(cat "$linkfile" | grep ed2k://); do
		#IFS=$oldIFS
		md5link=$(echo $link | md5sum)
		oldlink=$(grep "$md5link" $AUTODOWNLOAD_ED2K_CACHE_FILE|wc -l)
		if [ $oldlink -eq 0 ]; then
			log -n "Found new link $link, adding to amule script... "
			echo "$link" >> $TMP_AMULESCRIPT
			log "Done."
			echo "$md5link $link" >> $AUTODOWNLOAD_ED2K_CACHE_FILE
		fi
	done
	#IFS=$oldIFS
	rm $linkfile
done

tail -n $AUTODOWNLOAD_ED2K_CACHE_MAX $AUTODOWNLOAD_ED2K_CACHE_FILE > $TMP_ED2KCACHE
mv $TMP_ED2KCACHE $AUTODOWNLOAD_ED2K_CACHE_FILE

log "Done."

script_lines=$(cat $TMP_AMULESCRIPT|wc -l)

if [  $script_lines -gt 0 ]; then

	log -n "Checking running amuled processes... "
	amuledproc=$(ps -ef | grep amuled | grep -v grep | wc -l)

	if [ $amuledproc -gt 0 ]; then
		amuled_was_running=1
		log "Found $amuledproc processes running."
		if [ $AUTODOWNLOAD_RESTART_AMULE -gt 0 ]; then
			log -n "Restarting amule... "
			if ! $AMULE_DAEMON restart >> "$TMP_LOGFILE" 2>&1; then
				log "Failed!"
				cp "$AUTODOWNLOAD_ED2K_CACHE_FILE.old" "$AUTODOWNLOAD_ED2K_CACHE_FILE" 2>&1 > /dev/null
				cat "$TMP_AMULESCRIPT" | head -n $script_lines > "$WATCH_FILE"
				error "Cannot restart amule"
			fi
			log "Done."
			rm $AMULE_SHUTDOWN_REASON_FILE >/dev/null 2>&1 
		fi
	else
		log "No process running."
		log -n "Starting amule... "
		if ! $AMULE_DAEMON start >> "$TMP_LOGFILE" 2>&1; then
			log "Failed!"
			cp "$AUTODOWNLOAD_ED2K_CACHE_FILE.old" "$AUTODOWNLOAD_ED2K_CACHE_FILE" 2>&1 > /dev/null
			cat "$TMP_AMULESCRIPT" | head -n $script_lines > "$WATCH_FILE"
			error "Cannot start amule"

		fi
		log "Done."
		rm  $AMULE_SHUTDOWN_REASON_FILE >/dev/null 2>&1 

	fi

	# Lanciare comandi

	ok_link=""
	ko_link=""
	
	for link in $(cat "$TMP_AMULESCRIPT"); do
		log -n "Adding link $link..."
		if $AMULE_ED2K -c "$AMULE_CONFIG_PATH" "$link" >> "$TMP_LOGFILE" 2>&1; then
			log " Done."
			ok_link=$ok_link`echo "\n$link"`
		else
			log " Failed!"
			ko_link=$ko_link`echo "\n$link"`
		fi
	done

	if [ `echo -n "$ok_link" | wc -l` -gt 0 ]; then
		echo "The Following links were succcesfully added to amule queue:$ok_link" | $MAIL_CMD -s "$PACKAGE: Links added"
	fi

	if [ `echo -n "$ko_link" | wc -l` -gt 0 ]; then
		error "Errors found while adding links..."
	fi

fi

# -Schedulazione controller
is_mon_scheduled=$(crontab -l | grep $AUTODOWNLOAD_DLMONITOR_CMD | grep -v grep | wc -l)
if [ $is_mon_scheduled -eq 0 ] ; then
	log -n "monitor-download is not in crontab, adding it... "
	crontab -l > $TMP_CRONTAB
	echo "$CRONTAB_DLMONITOR" >> $TMP_CRONTAB
	crontab $TMP_CRONTAB
	log "Done.";
else
	log "monitor-download already in crontab."
fi


cleanup
